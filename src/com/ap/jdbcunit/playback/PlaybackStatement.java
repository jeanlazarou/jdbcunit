/*
 * @author: Jean Lazarou
 * @date: June 1 2004
 */
package com.ap.jdbcunit.playback;

import java.sql.*;

public class PlaybackStatement implements Statement {

	final static String invalid = "Method should never be called";
	
    public PlaybackStatement(Connection con) {
    	this.con = con;
    }

    public ResultSet executeQuery(String sql) throws SQLException {
        throw new SQLException(invalid);
    }

    public int executeUpdate(String sql) throws SQLException {
		throw new SQLException(invalid);
    }

    public void close() throws SQLException {
    }

    public int getMaxFieldSize() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setMaxFieldSize(int max) throws SQLException {
		throw new SQLException(invalid);
    }

    public int getMaxRows() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setMaxRows(int max) throws SQLException {
		throw new SQLException(invalid);
    }

    public void setEscapeProcessing(boolean enable) throws SQLException {
		throw new SQLException(invalid);
    }

    public int getQueryTimeout() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setQueryTimeout(int seconds) throws SQLException {
		throw new SQLException(invalid);
    }

    public void cancel() throws SQLException {
		throw new SQLException(invalid);
    }

    public SQLWarning getWarnings() throws SQLException {
		throw new SQLException(invalid);
    }

    public void clearWarnings() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setCursorName(String name) throws SQLException {
		throw new SQLException(invalid);
    }

    public boolean execute(String sql) throws SQLException {
		throw new SQLException(invalid);
    }

    public ResultSet getResultSet() throws SQLException {
		throw new SQLException(invalid);
    }

    public int getUpdateCount() throws SQLException {
		throw new SQLException(invalid);
    }

    public boolean getMoreResults() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setFetchDirection(int direction) throws SQLException {
		throw new SQLException(invalid);
    }

    public int getFetchDirection() throws SQLException {
		throw new SQLException(invalid);
    }

    public void setFetchSize(int rows) throws SQLException {
		throw new SQLException(invalid);
    }

    public int getFetchSize() throws SQLException {
		throw new SQLException(invalid);
    }

    public int getResultSetConcurrency() throws SQLException {
		throw new SQLException(invalid);
    }

    public int getResultSetType() throws SQLException {
		throw new SQLException(invalid);
    }

    public void addBatch(String sql) throws SQLException {
		throw new SQLException(invalid);
    }

    public void clearBatch() throws SQLException {
		throw new SQLException(invalid);
    }

    public int[] executeBatch() throws SQLException {
		throw new SQLException(invalid);
    }

    public Connection getConnection() throws SQLException {
        return con;
    }

    Connection con;

	public int getResultSetHoldability() throws SQLException {
		throw new UnsupportedOperationException();
	}

	public boolean getMoreResults(int current) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public int executeUpdate(String sql, int autoGeneratedKeys) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public boolean execute(String sql, int autoGeneratedKeys) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public int executeUpdate(String sql, int[] columnIndexes) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public ResultSet getGeneratedKeys() throws SQLException {
		throw new UnsupportedOperationException();
	}

	public int executeUpdate(String sql, String[] columnNames) throws SQLException {
		throw new UnsupportedOperationException();
	}

	public boolean execute(String sql, String[] columnNames) throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public <T> T unwrap(Class<T> iface) throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public boolean isWrapperFor(Class<?> iface) throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public boolean isClosed() throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public void setPoolable(boolean poolable) throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public boolean isPoolable() throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public void closeOnCompletion() throws SQLException {
		throw new UnsupportedOperationException();
	}

	//---- JDBC 4.0
	public boolean isCloseOnCompletion() throws SQLException {
		throw new UnsupportedOperationException();
	}
	
}
